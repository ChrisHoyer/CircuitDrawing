param_string ["Daten",en="Data"] = "010110" from "01"
param_int ["Breite",en="Width"] = 100 from (0, 100000]
param_int ["Höhe",en="Height"] = 400   from (0, 100000]
var p=length(get("Daten"))
var w=get("Breite")
var h=get("Höhe")

param_int "Risetime" = 0 from [0, 10000]
param_int "Falltime" = 0 from [0, 10000]
var risetime=get("Risetime")
var falltime=get("Falltime")

def max_scaling_breite=10000
def max_scaling_hoehe =10000
Scaling rechts(x):
set_param("Breite", get("Breite")+x)
scaling end

Scaling links(x, xnom):
set_param("Breite", get("Breite")+x)
move(-xnom, 0)
scaling end

scaling unten(x):
set_param("Höhe", get("Höhe")+x)
move(0,x/2)
scaling end

scaling oben(x):
set_param("Höhe", get("Höhe")+x)
move(0,-x/2)
scaling end

Drawing:
var x=0
var hat0=1
if substr(get("Daten"),0,1) != "0" :
  var hat0=0
  snapOnlyLeft(0,0)
else
  snapOnlyLeft(0,h)
end
for i=[1,p) :
  if hat0=1 & substr(get("Daten"),i,1) != "0":
    var hat0=0
	var xneu=w*i+risetime/2
    line(x,h,xneu-risetime,h,xneu,0)
    var x=xneu	  
  elseif hat0=0 & substr(get("Daten"),i,1) = "0"
    var hat0=1
    var xneu=w*i+falltime/2
    line(x,0,xneu-falltime,0,xneu,h)
	var x=xneu
  end
end
if hat0=1 :
  line(x,h,w*p,h)
  snapOnlyRight(w*p,h)
else
  line(x,0,w*p,0)
  snapOnlyRight(w*p,0)
end
select(0,0,p*w,h)
scale_line(w*p,0,w*p,h,p,0,1-w,1,max_scaling_breite-w,rechts)
scale_line(0,0,0,h,-p,0,1-w,1,max_scaling_breite-w,links)
scale_line(0,h,w*p,h,0,1,2-h,2,max_scaling_hoehe-h,unten)
scale_line(0,0,w*p,0,0,-1,2-h,2,max_scaling_hoehe-h,oben)
Drawing End

defvar TPxmin=0
defvar TPxmax=w*p
defvar TPymin=0
defvar TPymax=h
input(../_basic_rect_Textpos.sym)

Info:
origin(0,h/2)
text()
name(Digitale Daten)
namespace(Erweiterung & Beschriftung)
Info End