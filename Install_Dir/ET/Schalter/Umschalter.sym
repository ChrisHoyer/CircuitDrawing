param_int ["Radius Kontakt",en="Radius Contact"]=20 from [0,#inf)

param_int ["Breite",en="Width"]=300 from (0, 50, #inf)
param_int ["Öffnung",en="Opening"]=150
param_int ["Schalter Position",en="Switch Position"] = 100 from [-100,100] unit "%"
param_int ["Anschlüsse",en="Connections"] = 100 from [0,50,#inf)

var Stubs = get("Anschlüsse")
var posS = get("Schalter Position")
var rad = get("Radius Kontakt")

Drawing:
line(0, 0, Stubs, 0, Stubs+get("Breite"), -get("Öffnung")*posS/100)
line(Stubs+get("Breite"), -get("Öffnung"), 2*Stubs+get("Breite"), -get("Öffnung"))
line(Stubs+get("Breite"), get("Öffnung"), 2*Stubs+get("Breite"), get("Öffnung"))
snapLeft(0, 0)
snapRight(2*Stubs+get("Breite"), -get("Öffnung"))
snapRight(2*Stubs+get("Breite"), get("Öffnung"))

if rad > 0:
  circfill(Stubs,0,rad,rad)
  circfill(Stubs+get("Breite"),get("Öffnung"),rad,rad)
  circfill(Stubs+get("Breite"),-get("Öffnung"),rad,rad)
end

select(0, -abs(get("Öffnung")), 2*Stubs+get("Breite"), 2*abs(get("Öffnung")))
Drawing End

def TPxmin=0
var TPxmax=2*Stubs+get("Breite")
var TPymin=-abs(get("Öffnung"))
var TPymax=abs(get("Öffnung"))
input(../_basic_rect_Textpos.sym)

Info:
text()
name(Umschalter)
namespace(Schalter)
Info End